from ydata.sdk.common.model import BaseModel
from ydata.sdk.datasources._models.metadata.data_types import DataType

class DataSourceAttrs(BaseModel):
    """[`DataSourceAttrs`][ydata.sdk.datasources.DataSourceAttrs] are used to
    configure a [`Synthesizer`][ydata.sdk.synthesizers.Synthesizer] fitting
    process.

    Whenever a [`DataSourceAttrs`][ydata.sdk.datasources.DataSourceAttrs] is required, a `dict` can be provided instead.
    All arguments are optional except `sortbykey` that needs to be provided for [`TimeSeries`][ydata.sdk.datasources.datasource.DataSourceType.TIMESERIES] [`DataSource`][ydata.sdk.datasources.datasource.DataSource].

    By default, if `generate_cols` or `exclude_cols` are not specified, all columns are generated by the synthesizer.
    The argument `exclude_cols` has precedence over `generate_cols`, i.e. a column `col` will not be generated if it is in both list.

    Attributes:
        sortbykey (Union[str, List[str]]): (optional) column(s) to use to sort timeseries datasets
        entities (Union[str, List[str]]): (optional) columns representing entities ID
        generate_cols (List[str]): (optional) columns that should be synthesized
        exclude_cols (List[str]): (optional) columns that should not be synthesized
        dtypes (Dict[str, Union[str, DataType]]): (optional) datatype mapping that will overwrite the datasource metadata column datatypes
    """
    sortbykey: str | list[str]
    entities: str | list[str]
    generate_cols: list[str]
    exclude_cols: list[str]
    dtypes: dict[str, str | DataType]
    def __init__(self, **fields) -> None: ...
